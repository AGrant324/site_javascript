YAHOO.namespace ("BBfinallocate");

//========== Global Variables  ==========================================================

GLOBALS = new Array();
range = "";
datatype = "";
banktxnarray = Array ( );                     // 1 dimensional array of banktxn_id s
banktxntablearray = Array ( );                // 2 dimensional array used for populating table
banktxntablerowarray = Array ( );             // 1 dimensional array of table row numbers keyed by banktxn_id
banktxntablearraystatus = "initialload";
activebanktxn_id = "";
activebanktxntableindex = -1;
activebanktxn_allocationbutton = "";
updatelog = "";
meTooIdArray = Array ( );                     // 1 dimensional array of banktxn_ids requested for duplicated allocation
firstallocationmenupopulation = "1";
favouriteaddedupdated = "";
allocationclonearray = Array ( );              // 1 dimensional array of banktxn_ids suggested as allocation clones
allocationclonetablearray = Array ( );         // 2 dimensional array used for populating table
allocationclonetablestatus = "initialload";    
oldallocationclonearraylength = 0;             // used to delete old table elements prior to refresh
filtertype = Array( );
filterparm0 = Array( );
filterparm1 = Array( );
filterparm2 = Array( );
filtermaxindex = -1;
wizardresponsearray = Array ( );               // 1 dimensional array of banktxn_ids generated by wizard
wizardresponsetablearray = Array ( );          // 2 dimensional array used for populating table
wizardresponsetablestatus = "initialload"; 
oldtxnfavourite_vatrateid = "";
oldtxnfavourite_supplierid = "";
oldtxnfavourite_paymenttype = "";
oldtxnfavourite_fincategoryid = "";    
oldtxnfavourite_customerid = "";
oldtxnfavourite_jobid = "";

xy = Array ( );
// banktxnTableObject = "";

//========== Main Routine  ==========================================================

function initPage() {
// initialise logger
// myLogConfigs = {width: "500px", right: "10em", top: "10%", fontSize: "80%" };
// myLogContainer = null;
// myLogReader = new YAHOO.widget.LogReader(myLogContainer, myLogConfigs);	
// var myLogReader = new YAHOO.widget.LogReader();
// YAHOO.log("init called","info");
alert("finallocate called");	

 bankorcash = document.getElementById("BankorCash").value;
 range = document.getElementById("Range").value;
 
// --------- setup dialogue popup ---------------------------------------
 var handleAllocationDialogSubmit = function() { 
  updateFinalise();
  // hideDialog();
 };
 var handleAllocationDialogCancel = function() {	
	 hideDialog();
 };
 allocationDialogObject = new YAHOO.widget.Dialog("allocationDialog", { 
    // width : "800px",
    // fixedcenter : true,
    close: false,    	 
    visible : false,
    zindex: 25,
    // constraintoviewport : true,
    buttons : [ { text:"Save Allocation", handler:handleAllocationDialogSubmit, isDefault:true },
                { text:"Cancel", handler:handleAllocationDialogCancel } ]
 });
 allocationDialogObject.render();
 $('#allocationDialogouter').appendTo('body');   
// --------- setup allocation clone popup ---------------------------------------
 var handleCloneDialogSubmit = function() { 
  updateCloneFinalise();
  allocationCloneDialogObject.hide();
 };
 var handleCloneDialogCancel = function() {
  document.getElementById("messagetext").innerHTML = "Additional allocations cancelled";	 
  messageDialogObject.show();   
  allocationCloneDialogObject.hide();
 };
 allocationCloneDialogObject = new YAHOO.widget.Dialog("allocationCloneDialog", { 
    // width : "800px",
    // fixedcenter : true,
    close: false,    	 
    visible : false,
    zindex: 26,
    // constraintoviewport : true,
    buttons : [ { text:"Confirm ", handler:handleCloneDialogSubmit, isDefault:true },
              { text:"Cancel", handler:handleCloneDialogCancel } ]
 });
 allocationCloneDialogObject.render();
 $('#allocationCloneDialogouter').appendTo('body');  

 setupWait();

//--------- message dialogue popup ---------------------------------------
 var handleMessageDialogSubmit = function() { messageDialogObject.hide(); };
 messageDialogObject = new YAHOO.widget.Dialog("messageDialog", 
							{ width : "300px",
							  fixedcenter : true,
							  visible : false,
							  zindex: 27,
							  constraintoviewport : true,
							  buttons : [ { text:"OK", handler:handleMessageDialogSubmit, isDefault:true } ]
 });
 messageDialogObject.render(); 
 $('#messageDialogouter').appendTo('body');   
//--------- newfavourite dialogue popup ---------------------------------------
 var handleNewFavouriteDialogSubmit = function() { newFavouriteAction() };
 var handleNewFavouriteDialogCancel = function() { newFavouriteDialogObject.hide();};
 newFavouriteDialogObject = new YAHOO.widget.Dialog("newFavouriteDialog", 
							{ width : "300px",
							  fixedcenter : true,
							  visible : false,
							  zindex: 26,
							  constraintoviewport : true,
							  buttons : [ { text:"Create", handler:handleNewFavouriteDialogSubmit, isDefault:true },
								      { text:"Cancel", handler:handleNewFavouriteDialogCancel } ]
 });
 newFavouriteDialogObject.render(); 
 $('#newFavouriteDialogouter').appendTo('body');
 
//--------- newsupplier dialogue popup ---------------------------------------
 var handleNewSupplierDialogSubmit = function() { newSupplierAction() };
 var handleNewSupplierDialogCancel = function() { newSupplierDialogObject.hide();};
 newSupplierDialogObject = new YAHOO.widget.Dialog("newSupplierDialog", 
							{ width : "300px",
							  fixedcenter : true,
							  visible : false,
							  zindex: 26,
							  constraintoviewport : true,
							  buttons : [ { text:"Create", handler:handleNewSupplierDialogSubmit, isDefault:true },
								      { text:"Cancel", handler:handleNewSupplierDialogCancel } ]
 });
 newSupplierDialogObject.render();
 $('#newSupplierDialogouter').appendTo('body');    
//--------- newcustomer dialogue popup ---------------------------------------
 var handleNewCustomerDialogSubmit = function() { newCustomerAction() };
 var handleNewCustomerDialogCancel = function() { newCustomerDialogObject.hide();};
 newCustomerDialogObject = new YAHOO.widget.Dialog("newCustomerDialog", 
							{ width : "300px",
							  fixedcenter : true,
							  visible : false,
							  zindex: 26,
							  constraintoviewport : true,
							  buttons : [ { text:"Create", handler:handleNewCustomerDialogSubmit, isDefault:true },
								      { text:"Cancel", handler:handleNewCustomerDialogCancel } ]
 });
 newCustomerDialogObject.render(); 
 $('#newCustomerDialogouter').appendTo('body');  
 //--------- newjob dialogue popup ---------------------------------------
 var handleNewJobDialogSubmit = function() { newJobAction() };
 var handleNewJobDialogCancel = function() { newJobDialogObject.hide();};
 newJobDialogObject = new YAHOO.widget.Dialog("newJobDialog", 
							{ width : "300px",
							  fixedcenter : true,
							  visible : false,
							  zindex: 26,
							  constraintoviewport : true,
							  buttons : [ { text:"Create", handler:handleNewJobDialogSubmit, isDefault:true },
								      { text:"Cancel", handler:handleNewJobDialogCancel } ]
 });
 newJobDialogObject.render();
 $('#newJobDialogouter').appendTo('body');  
 //--------- Wizard dialogue popup --------------------------------------- 
 var handleWizardDialogContinue = function() { wizardDialog.hide(); uploadData("reload");}; 
 wizardDialog = new YAHOO.widget.Dialog("wizardDialog", { 
	 // width : "500px",
     fitToFrame      :   "true",     
	 visible : false,
	 zindex: 26,
	 fixedcenter  :true,
	 draggable : true, 
	 close : true, 
	 buttons : [ { text:"Continue", handler:handleWizardDialogContinue } ]	 
 });
 wizardDialog.render();
 $('#wizardDialogouter').appendTo('body');   
 //--------- add the dynamic listeners ---------------------------------------  
 YAHOO.util.Event.addListener("wizpropose", 'click', function (e) { callWizard("propose"); },true);  
 YAHOO.util.Event.addListener("wizconfirm", 'click', function (e) { callWizard("confirm"); },true);  
 YAHOO.util.Event.addListener("wizreject", 'click', function (e) { callWizard("reject"); },true);   
 YAHOO.util.Event.addListener("vatrateidinput", 'change', function (e) { vatRateChanged(); },true);
 YAHOO.util.Event.addListener("newfavouritebutton", 'click', function (e) { favouriteaddedupdated = "Add"; newFavouriteOutput(); },true);
 YAHOO.util.Event.addListener("newsupplierbutton", 'click', function (e) { newSupplierOutput(); },true);     
 YAHOO.util.Event.addListener("newcustomerbutton", 'click', function (e) { newCustomerOutput(); },true); 
 YAHOO.util.Event.addListener("newjobbutton", 'click', function (e) { newJobOutput(); },true); 
 YAHOO.util.Event.addListener("moreorlesstext", 'click', function (e) { moreOrLessToggle(); },true);  
 
 //--------- setup local hash database ---------------------------------------  
 uploadData("initialload");
};



//========== Functions  ==========================================================

function uploadData() {
 var handleDataRequestSuccess = function(o){
 //	  YAHOO.log("The DataRequestSuccess handler was called; this transaction did not abort.  tId: " + o.tId + ".", "info");
  if(o.responseText != undefined){ Create_Hashes(o.responseText); }
  // updatelog = o.responseText;
  // document.getElementById("updateLog").innerHTML = updatelog;  
  companya = Get_Array_Hash('company');
  company_name = companya[0];
  Get_Data_Hash('company',company_name);
  createFilterArrays();  
  createBanktxnTableArray();
  if (banktxntablearraystatus == "initialload") {populateBanktxnTable();} else {repopulateBanktxnTable();}
  stopWait();
 }
 var handleDataRequestFailure = function(o){
  YAHOO.log("The DataRequestFailure handler was called; this transaction aborted.  tId: " + o.tId + ".", "info", "example");
  // alert("The DataRequestFailure handler was called; this transaction aborted.  tId: " + o.tId + ".", "info");  
  response = "";  
  response += "<li>Transaction id: " + o.tId + "</li>";
  response += "<li>HTTP status: " + o.status + "</li>";
  response += "<li>Status code message: " + o.statusText + "</li>";
  updatelog = response+"<br>"+updatelog;
  document.getElementById("updateLog").innerHTML = updatelog;
  stopWait();  
 }
 var dataRequestCallback = {
  success: handleDataRequestSuccess,
  failure: handleDataRequestFailure,
  timeout: 50000
 }; 
 range = range.replace(/\+/g, '%2B'); 
 banktxncriteria = "banktxn[fieldvalue=banktxn_processstatus:"+range+"]";
 dataparms = "&DataRequestList=vatrate[mergedkey=vatrate_id+vatrate_dateeffective],company,fincategory,job,txntemplate,txnfavourite,customer,supplier,"+banktxncriteria;
 var sUrl = JSSitePHPURL()+"/"+JSCodeVersion()+"_javascriptdataprovider.php"+STDPARMS()+dataparms; 
 // YAHOO.log("makeDataRequest - "+sUrl,"info");
 // document.getElementById("updateLog").innerHTML = sUrl; 
 YAHOO.util.Connect.asyncRequest('GET', sUrl, dataRequestCallback);
 startWait("Loading"); 
}

function createBanktxnTableArray() {
// YAHOO.log("createBanktxnTableArray called","info");
 banktxntablearray = Array ( );	
 banktxnarray = Get_Array_Hash('banktxn');	 
 if (banktxnarray.length >0) {
  for (banktxnindex in banktxnarray) {
   tbanktxn_id = banktxnarray[banktxnindex];
   Get_Data_Hash('banktxn',tbanktxn_id);
   if (GLOBALS['banktxn_processstatus'] == "submitted") {
    actiontext = "View";
    actionstatustext = "Submitted";
   }  
   if (GLOBALS['banktxn_processstatus'] == "raw") {
    actiontext = "Allocate";
    actionstatustext = "Not yet allocated";
   }
   if (GLOBALS['banktxn_processstatus'] == "proposed") {
	actiontext = "Confirm";
	actionstatustext = "Proposed as "+GLOBALS['banktxn_txnfavouriteid'];
   }   
   if (GLOBALS['banktxn_processstatus'] == "allocated") {
    actiontext = "Review";
    actionstatustext = "Allocated to "+GLOBALS['banktxn_txnfavouriteid'];
   }
   actionmetoo = "";
   banktxntablerowarray[tbanktxn_id] = banktxnindex;
   banktxntablearray[banktxnindex] = Array ( GLOBALS['banktxn_id'],
   GLOBALS['banktxn_date'],GLOBALS['banktxn_txntype'],Filter(GLOBALS['banktxn_description'],GLOBALS['banktxn_bankuploadid']),
   GLOBALS['banktxn_debit'],GLOBALS['banktxn_credit'],actiontext,actionmetoo,actionstatustext );
  }
 }
}

function populateBanktxnTable() {
 // YAHOO.log("populateBanktxnTable called","info");
 var banktxnColumnDefs = [
        {key:"banktxn_id",label:"Id",width:85,resizeable:true,sortable:true},
        {key:"banktxn_date",label:"Date",width:80,resizeable:true,sortable:true},
        {key:"banktxn_type",label:"Type",width:50,resizeable:true,sortable:true},
        {key:"banktxn_description",label:"Description",width:290,resizeable:true,sortable:true},
        {key:"banktxn_debit",label:"Debit",width:50,resizeable:true,sortable:true},
        {key:"banktxn_credit",label:"Credit",width:50,resizeable:true,sortable:true},
        {key:"banktxn_allocationbutton",label:"",width:70,formatter:YAHOO.widget.DataTable.formatButton},
        {key:"banktxn_metoo",label:"Me Too",width:40,formatter:"checkbox"},        
        {key:"banktxn_allocationstatus",label:"Status",width:170,resizeable:true,sortable:true}
 ];
 var banktxnSource = new YAHOO.util.DataSource(banktxntablearray);
 banktxnSource.responseType = YAHOO.util.XHRDataSource.TYPE_JSARRAY;
 banktxnSource.responseSchema = {
    fields: ["banktxn_id","banktxn_date","banktxn_type","banktxn_description","banktxn_debit",
                 "banktxn_credit","banktxn_allocationbutton","banktxn_metoo","banktxn_allocationstatus"]
 };
 var banktxnConfigs = {
    sortedBy:{key:"banktxn_id",dir:"asc"},
    paginator: new YAHOO.widget.Paginator({
      rowsPerPage: 25,
      template: YAHOO.widget.Paginator.TEMPLATE_ROWS_PER_PAGE,
      rowsPerPageOptions: [10,25,50,100],
      pageLinks: 5
    }),
    draggableColumns:true
 };
 banktxnTableObject = new YAHOO.widget.DataTable("banktxntable", banktxnColumnDefs, banktxnSource, banktxnConfigs);
 
 banktxnTableObject.subscribe("checkboxClickEvent", function(oArgs){
   var elCheckbox = oArgs.target;
   var elRecord = this.getRecord(elCheckbox); 
   var cbanktxnid = elRecord.getData("banktxn_id");
   meTooIdArray[cbanktxnid] = elCheckbox.checked;   
 });   

 banktxnTableObject.subscribe("buttonClickEvent", function(oArgs){
   var oRecord = this.getRecord(oArgs.target);
   activebanktxntablerow = oRecord;
   activebanktxn_id = oRecord.getData("banktxn_id");
   activebanktxntableindex = -1;     
   tactivebanktxntableindex = -1;
   for (banktxnindex in banktxnarray) {
    tactivebanktxntableindex++; 
    if (activebanktxn_id == banktxnarray[banktxnindex]) {activebanktxntableindex = tactivebanktxntableindex;}
   }
   activebanktxn_allocationbutton = oRecord.getData("banktxn_allocationbutton");
   showDialog();
 });
 banktxntablearraystatus = "reload";

 return {
   bDS: banktxnSource,
   bDT: banktxnTableObject
 };
}  
  
function repopulateBanktxnTable() {
 // YAHOO.log("populateBanktxnTable called","info");
 alert("populateBanktxnTable called");	
 deletemax = banktxntablearray.length;
 for (di=0; di < deletemax; di++) {		 
  banktxnTableObject.deleteRow(0); 	 
 }
 // {row:globalDataCount, one:"one", two:"two", three:"three"}
 for (bi=0; bi < banktxntablearray.length; bi++) {	  		  
  datastring =  "var data = {"; 
  datastring =  datastring+'banktxn_id:"'+banktxntablearray[bi][0]+'", ';	  
  datastring =  datastring+'banktxn_date:"'+banktxntablearray[bi][1]+'", ';	  	  
  datastring =  datastring+'banktxn_type:"'+banktxntablearray[bi][2]+'", ';	  	  
  datastring =  datastring+'banktxn_description:"'+banktxntablearray[bi][3]+'", ';	  
  datastring =  datastring+'banktxn_debit:"'+banktxntablearray[bi][4]+'", ';	  
  datastring =  datastring+'banktxn_credit:"'+banktxntablearray[bi][5]+'", ';	  	  
  datastring =  datastring+'banktxn_allocationbutton:"'+banktxntablearray[bi][6]+'", ';	  	  
  datastring =  datastring+'banktxn_metoo:"'+banktxntablearray[bi][7]+'", ';	   
  datastring =  datastring+'banktxn_allocationstatus:"'+banktxntablearray[bi][8]+'"}';	    
  eval(datastring);	   
  var newrecord = YAHOO.widget.DataTable._cloneObject(data);   
  // newrecord.genericPrimeKeyFieldName = activeGenericId;
  banktxnTableObject.addRow(newrecord);   
 }
}
	
function pulseBanktxnTable() {
// YAHOO.log("pulseBanktxnTable called","info");	
// When row is allocated, pulse the color of the row yellow
var origColor = "#dd0";
var pulseColor = "#ff0";
// Create a temp anim instance that nulls out when anim is complete
var rowColorAnim = new YAHOO.util.ColorAnim(activebanktxntablerow.cells, {
   backgroundColor:{to:origColor, from:pulseColor}, duration:2});
var onComplete = function() {
   rowColorAnim = null;
   YAHOO.util.Dom.setStyle(activebanktxntablerow.cells, "backgroundColor", "");
}
rowColorAnim.onComplete.subscribe(onComplete);
rowColorAnim.animate();
}

function populateAllocationMenu() {
 // populate the dropdown menu
 // YAHOO.log("populateAllocationMenu called","info");
 // alert("populateAllocationMenu called - "+firstallocationmenupopulation);
 if (firstallocationmenupopulation == "1") {
  // alert("create menu"); 
  allocationMenu = new YAHOO.widget.Menu("favouriteallocations", { 
   position: "static", 
   hidedelay:  750,
   visible : false, 									
   // lazyload: true 
  }); 	
 } 
 var aMenuDatastring = "";
 aMenuDatastring = aMenuDatastring + "var aMenuData = ["; 
 bigsep = "";
 txntemplatearray = Get_Array_Hash('txntemplate');
 txnfavouritearray = Get_Array_Hash('txnfavourite'); 
 for (txntemplateindex in txntemplatearray) {
  ttxntemplate_purpose = txntemplatearray[txntemplateindex]	 
  Get_Data_Hash('txntemplate',ttxntemplate_purpose);
  aMenuDatastring = aMenuDatastring + bigsep + '{ text: "' + ttxntemplate_purpose + '", url: "#' + ttxntemplate_purpose + '", submenu: ';
  aMenuDatastring = aMenuDatastring +  '{ id: "' + ttxntemplate_purpose + '_rootitem", itemdata: [[';
  bigsep = ",";   
  littlesep = "";
  for (txnfavouriteindex in txnfavouritearray) {
   ttxnfavourite_id = txnfavouritearray[txnfavouriteindex]
   Get_Data_Hash('txnfavourite',ttxnfavourite_id);	 	  
   if (GLOBALS['txnfavourite_purpose'] == ttxntemplate_purpose)  {
    Get_Data_Hash('txnfavourite',ttxnfavourite_id);	 		   
    Get_Data_Hash('fincategory',GLOBALS['txnfavourite_fincategoryid']);
    $usethis = "0";
    if (GLOBALS["IOERROR"] == "0"){
     if ((GLOBALS['fincategory_usedefaulted'] == "Yes")||(GLOBALS['fincategory_useselected'] == "Yes")) { $usethis = "1"; }	 
     if (GLOBALS['fincategory_id'].substr(0,1) != "F") { $usethis = "0"; }
     if (GLOBALS['fincategory_purpose'] != ttxntemplate_purpose) { $usethis = "0"; }	    
     if ($usethis == "1") {
 	  tbits = ttxnfavourite_id.split("_");  tfavouritename = tbits[1]; 
	  aMenuDatastring = aMenuDatastring + littlesep + '{ text: "' + tfavouritename + '", id: "' + ttxnfavourite_id + '_item" }';	   
  	  littlesep = ",";
     } 
    }
   }
  }
  aMenuDatastring = aMenuDatastring + "],[";
  if (GLOBALS['company_enablefullfavouritesallocate'] == "Yes") {
   aMenuDatastring = aMenuDatastring + '{ text: "..new ' + ttxntemplate_purpose + ' favourite", id: "' + ttxntemplate_purpose + '_newitem" }';
  }
  aMenuDatastring = aMenuDatastring + "]]}}";  
 }
 aMenuDatastring = aMenuDatastring + "];";
  
 // YAHOO.log(aMenuDatastring,"info");
 // alert(aMenuDatastring);
 eval(aMenuDatastring);
 // print_r(aMenuData);

 if (firstallocationmenupopulation == "0") {  	 	 
  // alert("clear content"); 
  allocationMenu.clearContent(); 
 }
 firstallocationmenupopulation = "0";
 allocationMenu.addItems(aMenuData);
 
 // ----- add listeners to allocation menu ---------------------------
 txntemplatearray = Get_Array_Hash('txntemplate');
 txnfavouritearray = Get_Array_Hash('txnfavourite'); 
 for (txntemplateindex in txntemplatearray) {
  ttxntemplate_purpose = txntemplatearray[txntemplateindex]	 
  Get_Data_Hash('txntemplate',ttxntemplate_purpose);
  for (txnfavouriteindex in txnfavouritearray) {
   ttxnfavourite_id = txnfavouritearray[txnfavouriteindex]
   Get_Data_Hash('txnfavourite',ttxnfavourite_id);	 	  
   if (GLOBALS['txnfavourite_purpose'] == ttxntemplate_purpose)  {		
	YAHOO.util.Event.addListener(ttxnfavourite_id+"_item","click", prepareInputFromFavourite, ttxnfavourite_id);
	// alert("addListener "+ttxnfavourite_id+"_item");
	// YAHOO.log("addListener "+ttxnfavourite_id+"_item","info");		
   }
  }
  YAHOO.util.Event.addListener(ttxntemplate_purpose + "_newitem","click", prepareInputFromFavourite, ttxntemplate_purpose + "_newitem");
 }
 
 favouriteaddedupdated = ""; 
 allocationMenu.render();
 allocationMenu.hide();
}



function showDialog(e) {
 // YAHOO.log("showDialog called - "+activebanktxn_allocationbutton+" "+activebanktxn_id,"info");
 Get_Data_Hash('banktxn',activebanktxn_id);
 var actionN = ""; 
 if (activebanktxn_allocationbutton == "Confirm") { actionN = " - (Confirm)"; } 
 if (activebanktxn_allocationbutton == "Review") { actionN = " - (Review)"; }
 if (activebanktxn_allocationbutton == "View") { actionN = " - (View)"; }
 document.getElementById("allocationinput_header").innerHTML = "Transaction - "+activebanktxn_id+ actionN;
 document.getElementById("allocate_banktxn_date").innerHTML = GLOBALS['banktxn_date'];  
 document.getElementById("allocate_banktxn_txntype").innerHTML = GLOBALS['banktxn_txntype']; 
 document.getElementById("allocate_banktxn_description").innerHTML = GLOBALS['banktxn_description']; 
 document.getElementById("allocate_banktxn_debit").innerHTML = GLOBALS['banktxn_debit']; 
 document.getElementById("allocate_banktxn_credit").innerHTML = GLOBALS['banktxn_credit'];
 populateAllocationMenu();  
 allocationMenu.show();
 if (activebanktxn_allocationbutton == "Confirm") { prepareInputForReview(); } 
 if (activebanktxn_allocationbutton == "Review") { prepareInputForReview(); }
 if (activebanktxn_allocationbutton == "View") { prepareInputForReview(); }
 if (activebanktxn_allocationbutton == "Allocate") { initialiseInput(); } 
 allocationDialogObject.show();
 allocationDialogObject.center();
}

function hideDialog(e) { 
 allocationMenu.hide();
 allocationDialogObject.hide();
}

function initialiseInput() {
 document.getElementById("allocationresult_message").innerHTML = "No Allocation made so far."; 	
 document.getElementById("purposerow").style.display = 'none'; 
 document.getElementById("favouritenamerow").style.display = 'none';
 document.getElementById("separator1row").style.display = 'none';  
 document.getElementById("supplieridrow").style.display = 'none'; 
 document.getElementById("paymenttyperow").style.display = 'none';  
 document.getElementById("vatrateidrow").style.display = 'none';
 document.getElementById("vatrow").style.display = 'none'; 
 document.getElementById("fincategoryidrow").style.display = 'none'; 
 document.getElementById("customeridrow").style.display = 'none';
 document.getElementById("separator2row").style.display = 'none'; 
 document.getElementById("commentrow").style.display = 'none';  
 document.getElementById("jobidrow").style.display = 'none';
}

function prepareInputForReview(e) {	
 YAHOO.log("prepareInputForReview called -" + activebanktxn_id,"info");
 favouriteaddedupdated = "";
 document.getElementById("allocationresult_message").innerHTML = "Existing Allocation"; 	
 document.getElementById("idinput").value = activebanktxn_id;
 document.getElementById("purposeinput").value = GLOBALS['banktxn_purpose'];   
 document.getElementById("purposetext").innerHTML = GLOBALS['banktxn_purpose'];
 tbits = GLOBALS['banktxn_txnfavouriteid'].split("_");  tfavouritename = tbits[1]; 
 document.getElementById("favouritenametext").innerHTML = tfavouritename;
 temphash = Get_SelectArrays_Hash("supplier","supplier_id","supplier_name"); temphash[""] = ""; 
 JSINSELECTHASH(temphash,
	  document.allocateresultform.supplieridinput,GLOBALS['banktxn_supplierid'],"","","");
 JSINSELECTHASH(List2Hash("Transaction,Account"),
	  document.allocateresultform.paymenttypeinput,GLOBALS['banktxn_paymenttype'],"","","");
 JSINSELECTHASH(Get_SelectArrays_Hash_DateEffective("vatrate","vatrate_id","vatrate_description","banktxn_date"),
	  document.allocateresultform.vatrateidinput,GLOBALS['banktxn_vatrateid'],"No","","");
 Get_Data_Hash_DateEffective('vatrate',GLOBALS['banktxn_vatrateid'],GLOBALS['banktxn_date']);
 document.getElementById("vatratepercenttext").innerHTML = "@"+GLOBALS['vatrate_rate']+"%"; 
 document.getElementById("vatinput").value = GLOBALS['banktxn_vat'];
 JSINSELECTHASH(Get_FinCategorySelectArrays_Hash (GLOBALS['banktxn_purpose']),
	  document.allocateresultform.fincategoryidinput,GLOBALS['banktxn_fincategoryid'],"","","");
 temphash = Get_SelectArrays_Hash("customer","customer_id","customer_name"); temphash[""] = ""; 
 JSINSELECTHASH(temphash,
	  document.allocateresultform.customeridinput,GLOBALS['banktxn_customerid'],"","","");
 temphash = Get_SelectArrays_Hash("job","job_id","job_description"); temphash[""] = "none";
 JSINSELECTHASH(temphash,
	  document.allocateresultform.jobidinput,GLOBALS['banktxn_jobid'],"","","");
 document.getElementById("commentinput").value = GLOBALS['banktxn_comment'];
 document.getElementById("addtobankdescription").checked=false;    
 displayInput();
 oldtxnfavourite_vatrateid = GLOBALS['banktxn_vatrateid'];
 oldtxnfavourite_supplierid = GLOBALS['banktxn_supplierid'];  
 oldtxnfavourite_paymenttype = GLOBALS['banktxn_paymenttype'];   
 oldtxnfavourite_fincategoryid = GLOBALS['banktxn_fincategoryid'];    
 oldtxnfavourite_customerid = GLOBALS['banktxn_customerid'];
 oldtxnfavourite_jobid = GLOBALS['banktxn_jobid'];  
}

function prepareInputFromFavourite(e, parm) {
 // e, transactionfavouriteid	
 YAHOO.log("prepareInputFromFavourite called -" + parm,"info");
 // alert("prepareInputFromFavourite called -" + parm);
 favouriteaddedupdated = "";
 if (activebanktxn_allocationbutton == "Confirm") { document.getElementById("allocationresult_message").innerHTML = "Confirmation of proposed allocation."; } 
 if (activebanktxn_allocationbutton == "Review") { document.getElementById("allocationresult_message").innerHTML = "Proposed update made to existing allocation."; }
 if (activebanktxn_allocationbutton == "Allocate") { document.getElementById("allocationresult_message").innerHTML = "Proposed update made to new allocation."; }  
 ttxnfavourite_id = parm;
 Get_Data_Hash('txnfavourite',ttxnfavourite_id);
 if (parm.indexOf("_newitem") != -1) {
  favouriteaddedupdated = "Add";
  document.getElementById("idinput").value = activebanktxn_id;
  tpurpose = ttxnfavourite_id.replace("_newitem","");
  document.getElementById("purposeinput").value = tpurpose;
  document.getElementById("purposetext").innerHTML = tpurpose;
  document.getElementById("favouritenametext").innerHTML = "";  
  GLOBALS['txnfavourite_supplierid'] = "";
  GLOBALS['txnfavourite_paymenttype'] = "";
  GLOBALS['txnfavourite_vatrateid'] = "";
  document.getElementById("vatratepercenttext").innerHTML = "";  
  document.getElementById("vatinput").value = "";  
  GLOBALS['txnfavourite_fincategoryid'] = "";
  GLOBALS['txnfavourite_customerid'] = "";
  GLOBALS['txnfavourite_comment'] = "";
  GLOBALS['txnfavourite_jobid'] = "";  
 } else {  
  favouriteaddedupdated = "";   
  tpurpose = GLOBALS['txnfavourite_purpose'];
  document.getElementById("idinput").value = activebanktxn_id;
  document.getElementById("purposeinput").value = tpurpose;   
  document.getElementById("purposetext").innerHTML = tpurpose;
  tbits = GLOBALS['txnfavourite_id'].split("_");  tfavouritename = tbits[1];   
  document.getElementById("favouritenametext").innerHTML = tfavouritename;
  document.getElementById("vatinput").value = calculateVAT(GLOBALS['banktxn_debit'],GLOBALS['banktxn_credit'],GLOBALS['txnfavourite_vatrateid'],GLOBALS['banktxn_date']);
  document.getElementById("vatratepercenttext").innerHTML = "@"+GLOBALS['vatrate_rate']+"%";        
 }
 temphash = Get_SelectArrays_Hash("supplier","supplier_id","supplier_name"); temphash[""] = "-- select supplier --"; 
 JSINSELECTHASH(temphash,
		  document.allocateresultform.supplieridinput,GLOBALS['txnfavourite_supplierid'],"","","");
 temphash = { 'Transaction':'Transaction', 'Account':'Account', '':'-- select payment type --'};
 JSINSELECTHASH(temphash,
		  document.allocateresultform.paymenttypeinput,GLOBALS['txnfavourite_paymenttype'],"","","");
 temphash = Get_SelectArrays_Hash_DateEffective("vatrate","vatrate_id","vatrate_description","banktxn_date"); temphash[""] = "-- select vat rate --";  
 JSINSELECTHASH(temphash,
		  document.allocateresultform.vatrateidinput,GLOBALS['txnfavourite_vatrateid'],"No","","");
 temphash = Get_FinCategorySelectArrays_Hash (tpurpose); temphash[""] = "-- select financial category --";   
 JSINSELECTHASH(temphash,
		  document.allocateresultform.fincategoryidinput,GLOBALS['txnfavourite_fincategoryid'],"","","");  
 temphash = Get_SelectArrays_Hash("customer","customer_id","customer_name"); temphash[""] = "-- select customer --"; 
 JSINSELECTHASH(temphash,
		  document.allocateresultform.customeridinput,GLOBALS['txnfavourite_customerid'],"","","");
 temphash = Get_SelectArrays_Hash("job","job_id","job_description"); temphash[""] = "none";
 JSINSELECTHASH(temphash,
		  document.allocateresultform.jobidinput,GLOBALS['txnfavourite_jobid'],"","","");
 document.getElementById("commentinput").value = GLOBALS['txnfavourite_comment']; 
 document.getElementById("addtobankdescription").checked=false;    
 displayInput();
 oldtxnfavourite_vatrateid = GLOBALS['txnfavourite_vatrateid'];
 oldtxnfavourite_supplierid = GLOBALS['txnfavourite_supplierid'];  
 oldtxnfavourite_paymenttype = GLOBALS['txnfavourite_paymenttype'];   
 oldtxnfavourite_fincategoryid = GLOBALS['txnfavourite_fincategoryid'];    
 oldtxnfavourite_customerid = GLOBALS['txnfavourite_customerid'];
 oldtxnfavourite_jobid = GLOBALS['txnfavourite_jobid']; 
 // alert(oldtxnfavourite_vatrateid+" "+oldtxnfavourite_supplierid+" "+oldtxnfavourite_paymenttype+" "+oldtxnfavourite_fincategoryid+" "+oldtxnfavourite_customerid+" "+oldtxnfavourite_jobid);
 if (favouriteaddedupdated == "Add") {newFavouriteOutput();}
}


function moreOrLessToggle() {
 var moreorless = document.getElementById("moreorlesstext").innerHTML;
 YAHOO.log("moreOrLessToggle called -" + moreorless,"info");	 
 // alert("moreOrLessToggle called -" + moreorless);
 if (moreorless == "more detail...") { document.getElementById("moreorlesstext").innerHTML = "less detail..."; displayInput(); }
 else {
  if (moreorless == "less detail...") { document.getElementById("moreorlesstext").innerHTML = "more detail..."; displayInput(); }		
 }
}

function displayInput() {
 // purpose
 var tpurpose = document.getElementById("purposetext").innerHTML;	
 var moreorless = document.getElementById("moreorlesstext").innerHTML;
 YAHOO.log("displayInput called -" + tpurpose + " " + moreorless,"info");	 
 // alert("displayInput called -" + tpurpose + " " + moreorless);

 var showall = "0";	 
 if (moreorless == "less detail...") { showall = "1"; }	 // this is opposite of next action.
 
 Get_Data_Hash('txntemplate',tpurpose);
 document.getElementById("purposerow").style.display = "table-row";
 
 if (GLOBALS['company_enablefullfavouritesallocate'] != "Yes") { document.getElementById("newfavouritebutton").style.display = 'none';}
 document.getElementById("favouritenamerow").style.display = "table-row";
 
 document.getElementById("separator1row").style.display = 'table-row';  
 
 if ((GLOBALS['company_showsupplierallocate'] == "No")||(GLOBALS['txntemplate_supplierid'] == "NA")||(GLOBALS['txntemplate_supplierid'] == "Defaulted")) {
  document.getElementById("supplieridrow").style.display = "none";
 }
 else {document.getElementById("supplieridrow").style.display = "table-row";}
 if ((showall == "1")&&(GLOBALS['txntemplate_supplierid'] != "NA")) {document.getElementById("supplieridrow").style.display = "table-row";}
 
 if ((GLOBALS['company_showpaymenttypeallocate'] == "No")||(GLOBALS['txntemplate_paymenttype'] == "NA")||(GLOBALS['txntemplate_paymenttype'] == "Defaulted")) {
  document.getElementById("paymenttyperow").style.display = "none";
 }
 else {document.getElementById("paymenttyperow").style.display = "table-row";}
 if ((showall == "1")&&(GLOBALS['txntemplate_paymenttype'] != "NA")) {document.getElementById("paymenttyperow").style.display = "table-row";}
 
 if ((GLOBALS['company_showvatallocate'] == "No")||(GLOBALS['txntemplate_vatrateid'] == "NA")||(GLOBALS['txntemplate_vatrateid'] == "Defaulted")) { 
  document.getElementById("vatrow").style.display = "none"; 	 
  document.getElementById("vatrateidrow").style.display = "none";
 } else {
  document.getElementById("vatrow").style.display = "table-row";  	 
  document.getElementById("vatrateidrow").style.display = "table-row" ;
 }
 if ((showall == "1")&&(GLOBALS['txntemplate_vatrateid'] != "NA")) {
  document.getElementById("vatrow").style.display = "table-row";  	 
  document.getElementById("vatrateidrow").style.display = "table-row" ;
 }
  
 if ((GLOBALS['company_showfincategoryallocate'] == "No")||(GLOBALS['txntemplate_fincategoryid'] == "NA")||(GLOBALS['txntemplate_fincategoryid'] == "Defaulted")) {
  document.getElementById("fincategoryidrow").style.display = "none";
 }
 else {document.getElementById("fincategoryidrow").style.display = "table-row";}
 if ((showall == "1")&&(GLOBALS['txntemplate_fincategoryid'] != "NA")) {document.getElementById("fincategoryidrow").style.display = "table-row";} 

 if ((GLOBALS['company_showcustomerallocate'] == "No")||(GLOBALS['txntemplate_customerid'] == "NA")||(GLOBALS['txntemplate_customerid'] == "Defaulted")) {
  document.getElementById("customeridrow").style.display = "none";}
 else {document.getElementById("customeridrow").style.display = "table-row";}
 if ((showall == "1")&&(GLOBALS['txntemplate_customerid'] != "NA")) {document.getElementById("customeridrow").style.display = "table-row";} 
 
 document.getElementById("separator2row").style.display = 'table-row'; 
 
 if ((GLOBALS['company_showcommentallocate'] == "No")||(GLOBALS['txntemplate_comment'] == "NA")||(GLOBALS['txntemplate_comment'] == "Defaulted")) {
  document.getElementById("commentrow").style.display = "none";
 } else {document.getElementById("commentrow").style.display = "table-row";}
 if ((showall == "1")&&(GLOBALS['txntemplate_comment'] != "NA")) {document.getElementById("commentrow").style.display = "table-row";}
 
 if ((GLOBALS['company_showjoballocate'] == "No")||(GLOBALS['txntemplate_jobid'] == "NA")||(GLOBALS['txntemplate_jobid'] == "Defaulted")) {
  document.getElementById("jobidrow").style.display = "none";
 } else {document.getElementById("jobidrow").style.display = "table-row";}
 if ((showall == "1")&&(GLOBALS['txntemplate_jobid'] != "NA")) {document.getElementById("jobidrow").style.display = "table-row";} 
 
 YAHOO.log("displayInput2 called -" + tpurpose,"info"); 
}

function updateFinalise() {
 YAHOO.log("updateFinalise -" + activebanktxn_id+"   "+favouriteaddedupdated,"info");
 // alert(activebanktxn_id+"   "+favouriteaddedupdated);  
 tfavouritename = document.getElementById("favouritenametext").innerHTML; 
 meTooIdArray[activebanktxn_id] = true;
 for (var banktxn_id in meTooIdArray) {
  if (meTooIdArray[banktxn_id]) { // if checked
   Get_Data_Hash("banktxn",banktxn_id);
   Get_Data_Hash("txntemplate",document.getElementById("purposeinput").value);
   YAHOO.log("updateFinalise 2 -" + document.getElementById("purposeinput").value,"info");
   GLOBALS['banktxn_processstatus'] = "allocated";
   GLOBALS['banktxn_purpose'] = document.getElementById("purposeinput").value; 
   // YAHOO.log('banktxn_purpose'+GLOBALS['banktxn_purpose'],"info"); 
   GLOBALS['banktxn_txnfavouriteid'] = document.getElementById("purposetext").innerHTML+"_"+document.getElementById("favouritenametext").innerHTML;
   ts = document.getElementById("commentinput").value;
   if (ts != undefined){ GLOBALS['banktxn_comment'] = document.getElementById("commentinput").value;}
   else { GLOBALS['banktxn_comment'] = "";}
    
   ts = document.getElementById("addtobankdescription").checked;
   if (ts != undefined){
    if (document.getElementById("addtobankdescription").checked == true ) {
     var btbits = GLOBALS['banktxn_description'].split(" [");
     var origbanktxn_description = btbits[0] 
     GLOBALS['banktxn_description'] = origbanktxn_description + " [ "+GLOBALS['banktxn_comment']+" ]";
    }
   }  
   ts = document.getElementById("supplieridinput").value;
   if (ts != undefined){ GLOBALS['banktxn_supplierid'] = document.getElementById("supplieridinput").value; }
   else { GLOBALS['banktxn_supplierid'] = "";}
   ts = document.getElementById("paymenttypeinput").value;
   if (ts != undefined){ GLOBALS['banktxn_paymenttype'] = document.getElementById("paymenttypeinput").value; }
   else { GLOBALS['banktxn_paymenttype'] = "";} 
   ts = document.getElementById("vatrateidinput").value;
   if (ts != undefined){ GLOBALS['banktxn_vatrateid'] = document.getElementById("vatrateidinput").value;}
   else { GLOBALS['banktxn_vatrateid'] = "";}
   GLOBALS['banktxn_vat'] = calculateVAT(GLOBALS['banktxn_debit'],GLOBALS['banktxn_credit'],GLOBALS['banktxn_vatrateid'],GLOBALS['banktxn_date']); 
   ts = document.getElementById("fincategoryidinput").value;
   if (ts != undefined){ GLOBALS['banktxn_fincategoryid'] = document.getElementById("fincategoryidinput").value;}
   else { GLOBALS['banktxn_fincategoryid'] = "";}
   ts = document.getElementById("customeridinput").value;
   if (ts != undefined){ GLOBALS['banktxn_customerid'] = document.getElementById("customeridinput").value;}
   else { GLOBALS['banktxn_customerid'] = "";}
   ts = document.getElementById("jobidinput").value;
   if (ts != undefined){ GLOBALS['banktxn_jobid'] = document.getElementById("jobidinput").value;}
   else { GLOBALS['banktxn_jobid'] = "";}
   YAHOO.log("Pre Write - "+GLOBALS['banktxn_processstatus']+"/"+GLOBALS['banktxn_purpose']+"/"+GLOBALS['banktxn_txnfavouriteid']+"/"+GLOBALS['banktxn_supplierid']+"/"+GLOBALS['banktxn_customerid'],"info");
   Write_Data_Hash("banktxn",banktxn_id);
   var col = banktxnTableObject.getColumn('banktxn_allocationbutton');
   banktxntablerow = getBanktxnTableArrayRow(banktxn_id);
   var col = banktxnTableObject.getColumn('banktxn_description');   
   banktxnTableObject.updateCell(banktxntablerow, col, Filter(GLOBALS['banktxn_description'],GLOBALS['banktxn_bankuploadid']));    
   var col = banktxnTableObject.getColumn('banktxn_allocationbutton');   
   banktxnTableObject.updateCell(banktxntablerow, col, "Review");
   col = banktxnTableObject.getColumn('banktxn_allocationstatus'); 
   banktxnTableObject.updateCell(banktxntablerow, col, "allocated to "+GLOBALS['banktxn_txnfavouriteid']);    
   var col = banktxnTableObject.getColumn('banktxn_metoo');    
   banktxnTableObject.updateCell(banktxntablerow, col, false); 
   banktxnTableObject.selectRow(banktxnTableObject.getTrEl(banktxntablerow));  
  }
 }   
 var r = true;
 if (favouriteaddedupdated == "Add") {
  var question = 'Do you want a new favourite "'+tfavouritename+'" to be created.';	
  var rejection = 'No new favourite created.';
  r=confirm(question);  
 } else {
  if ((GLOBALS['banktxn_vatrateid'] != oldtxnfavourite_vatrateid)&&((GLOBALS['txntemplate_vatrateid'] == "Defaulted")||(GLOBALS['txntemplate_vatrateid'] == "Selected"))) { 
   // alert("you have changed the vatrateid"); 
   favouriteaddedupdated = "Change"; 
  }
  if ((GLOBALS['banktxn_supplierid'] != oldtxnfavourite_supplierid)&&((GLOBALS['txntemplate_supplierid'] == "Defaulted")||(GLOBALS['txntemplate_supplierid'] == "Selected"))) { 
   // alert("you have changed the supplierid");
   favouriteaddedupdated = "Change"; 
  }
  if ((GLOBALS['banktxn_paymenttype'] != oldtxnfavourite_paymenttype)&&((GLOBALS['txntemplate_paymenttype'] == "Defaulted")||(GLOBALS['txntemplate_paymenttype'] == "Selected"))) { 
   // alert("you have changed the paymenttype");
   favouriteaddedupdated = "Change"; 
  }    
  if ((GLOBALS['banktxn_fincategoryid'] != oldtxnfavourite_fincategoryid)&&((GLOBALS['txntemplate_fincategoryid'] == "Defaulted")||(GLOBALS['txntemplate_fincategoryid'] == "Selected"))) { 
   // alert("you have changed the fincategoryid");
   favouriteaddedupdated = "Change"; 
  }    
  if ((GLOBALS['banktxn_customerid'] != oldtxnfavourite_customerid)&&((GLOBALS['txntemplate_customerid'] == "Defaulted")||(GLOBALS['txntemplate_customerid'] == "Selected"))) { 
   // alert("you have changed the customerid");
   favouriteaddedupdated = "Change"; 
  }
  if ((GLOBALS['banktxn_jobid'] != oldtxnfavourite_jobid)&&((GLOBALS['txntemplate_jobid'] == "Defaulted")||(GLOBALS['txntemplate_jobid'] == "Selected"))) { 
   // alert("you have changed the jobid");
   favouriteaddedupdated = "Change"; 
  }
  if (favouriteaddedupdated == "Change") {
   var question = 'You have made changes to the allocation. Do you want existing favourite "'+tfavouritename+'" to be updated.';	 
   var rejection = 'No changes made to favourite.';
   r=confirm(question);
  }    
 }
 if (r==true) {   
  if ((favouriteaddedupdated == "Add")||(favouriteaddedupdated == "Change")) { txnFavouriteUpdate(); }
 } 
  
 meTooIdArray = Array ( );

 // allocationDialogObject.hide();
 allocationclonearray = findPotentialAllocationClones(activebanktxn_id);
 if (allocationclonearray.length >0) {
  $messagetext = "The following unallocated bank transactions have a matching description. <br><br>Do you wish to allocate them in the same way";
  $messagetext = $messagetext + " to <b>"  + document.getElementById("purposetext").innerHTML+"/"+document.getElementById("favouritenametext").innerHTML+"</b>\n";
  document.getElementById("allocationclonetext").innerHTML = $messagetext;
  if (allocationclonetablestatus == "initialload") { populateAllocationCloneTable(); } 
  else {repopulateAllocationCloneTable();}
  allocationCloneDialogObject.show();
  allocationCloneDialogObject.center();   
 }
 hideDialog();
}

//========== Allocation Cloning  ==========================================================

function findPotentialAllocationClones(abanktxn_id) {
 // alert("findPotentialAllocationClones called ");	
 foundarray = Array ( );
 Get_Data_Hash('banktxn',abanktxn_id);
 var abanktxn_description = Filter(GLOBALS['banktxn_description'],GLOBALS['banktxn_bankuploadid']);	
 sbanktxnarray = Get_Array_Hash('banktxn');
 if (sbanktxnarray.length >0) {
  for (sbanktxnindex in sbanktxnarray) {
   tbanktxn_id = sbanktxnarray[sbanktxnindex];
   Get_Data_Hash('banktxn',tbanktxn_id);
   if ((Match(abanktxn_description,Filter(GLOBALS['banktxn_description'],GLOBALS['banktxn_bankuploadid'])))
	    &&(tbanktxn_id != abanktxn_id)
	    &&(GLOBALS['banktxn_processstatus'] == "raw")) { 
    foundarray.push(tbanktxn_id); 
   }
  }
 }
 return foundarray;  
}

function populateAllocationCloneTable() {
 // YAHOO.log("populateAllocationCloneTable called","info");
 // alert("populateAllocationCloneTable called "+allocationclonetablestatus);
	
 allocationclonetablearray = Array ();  
 if (allocationclonearray.length >0) {
  for (allocationcloneindex in allocationclonearray) {
   tbanktxn_id = allocationclonearray[allocationcloneindex];
   Get_Data_Hash('banktxn',tbanktxn_id);
   allocationclonetablearray[allocationcloneindex] = Array ( GLOBALS['banktxn_id'],
   GLOBALS['banktxn_date'],GLOBALS['banktxn_txntype'],GLOBALS['banktxn_description'],
   GLOBALS['banktxn_debit'],GLOBALS['banktxn_credit'] );
  }
 }
 oldallocationclonearraylength = allocationclonearray.length; 		
	
 var allocationcloneColumnDefs = [
    {key:"allocationclone_id",label:"Id",width:70,resizeable:true,sortable:true},
    {key:"allocationclone_date",label:"Date",width:70,resizeable:true,sortable:true},
    {key:"allocationclone_type",label:"Type",width:20,resizeable:true,sortable:true},
    {key:"allocationclone_description",label:"Description",width:300,resizeable:true,sortable:true},
    {key:"allocationclone_debit",label:"Debit",width:50,resizeable:true,sortable:true},
    {key:"allocationclone_credit",label:"Credit",width:50,resizeable:true,sortable:true}      
 ];
  
 var allocationcloneSource = new YAHOO.util.DataSource(allocationclonetablearray);
 allocationcloneSource.responseType = YAHOO.util.XHRDataSource.TYPE_JSARRAY;
 allocationcloneSource.responseSchema = {
    fields: ["allocationclone_id","allocationclone_date","allocationclone_type","allocationclone_description","allocationclone_debit",
             "allocationclone_credit"]
 };
  
 var allocationcloneConfigs = {
    sortedBy:{key:"allocationclone_id",dir:"asc"},
    paginator: new YAHOO.widget.Paginator({
      rowsPerPage: 25,
      template: YAHOO.widget.Paginator.TEMPLATE_ROWS_PER_PAGE,
      rowsPerPageOptions: [10,25,50,100],
      pageLinks: 5
    }),
    draggableColumns:true
 };
 allocationcloneTableObject = new YAHOO.widget.DataTable("allocationclonetable", allocationcloneColumnDefs, allocationcloneSource, allocationcloneConfigs);   
 allocationclonetablestatus = "reload";	   
 return {
    aDS: allocationcloneSource,
    aDT: allocationcloneTableObject
 };
}
 
function repopulateAllocationCloneTable() {
 // YAHOO.log("repopulateAllocationCloneTable called","info");
 // alert("repopulateAllocationCloneTable called "+allocationclonetablestatus+"-"+oldallocationclonearraylength); 
 for (di=0; di < oldallocationclonearraylength; di++) {		 
  allocationcloneTableObject.deleteRow(0);
 }
 // {row:globalDataCount, one:"one", two:"two", three:"three"}
 for (allocationcloneindex in allocationclonearray) {
  tbanktxn_id = allocationclonearray[allocationcloneindex];
  Get_Data_Hash('banktxn',tbanktxn_id);  	  
  datastring =  "var data = {"; 
  datastring =  datastring+'allocationclone_id:"'+GLOBALS['banktxn_id']+'", ';	  
  datastring =  datastring+'allocationclone_date:"'+GLOBALS['banktxn_date']+'", ';	  	  
  datastring =  datastring+'allocationclone_type:"'+GLOBALS['banktxn_txntype']+'", ';	  	  
  datastring =  datastring+'allocationclone_description:"'+GLOBALS['banktxn_description']+'", ';	  
  datastring =  datastring+'allocationclone_debit:"'+GLOBALS['banktxn_debit']+'", ';	  
  datastring =  datastring+'allocationclone_credit:"'+GLOBALS['banktxn_credit']+'"}';  
  eval(datastring);	   
  var newrecord = YAHOO.widget.DataTable._cloneObject(data);   
  //  newrecord.genericPrimeKeyFieldName = activeGenericId;
  allocationcloneTableObject.addRow(newrecord);
  // allocationCloneDialogObject.render();
 }
 oldallocationclonearraylength = allocationclonearray.length; 
}

function updateCloneFinalise() {
 // YAHOO.log("updateCloneFinalise called","info");
 //  alert("updateCloneFinalise called ");
 if (allocationclonearray.length >0) {
  for (allocationcloneindex in allocationclonearray) {
   banktxn_id = allocationclonearray[allocationcloneindex];
   Get_Data_Hash('banktxn',banktxn_id);
   Get_Data_Hash("txntemplate",document.getElementById("purposeinput").value);
   // YAHOO.log("updateCloneFinalise -" + document.getElementById("purposeinput").value,"info");
   GLOBALS['banktxn_processstatus'] = "allocated";
   GLOBALS['banktxn_purpose'] = document.getElementById("purposeinput").value;
   // YAHOO.log('banktxn_purpose'+GLOBALS['banktxn_purpose'],"info"); 
   GLOBALS['banktxn_txnfavouriteid'] = document.getElementById("purposetext").innerHTML+"_"+document.getElementById("favouritenametext").innerHTML;
   // alert(GLOBALS['banktxn_txnfavouriteid']);   
   ts = document.getElementById("commentinput").value;
   if (ts != undefined){ GLOBALS['banktxn_comment'] = document.getElementById("commentinput").value;}
   else { GLOBALS['banktxn_comment'] = "";}
   ts = document.getElementById("supplieridinput").value;
   if (ts != undefined){ GLOBALS['banktxn_supplierid'] = document.getElementById("supplieridinput").value; }
   else { GLOBALS['banktxn_supplierid'] = "";}
   ts = document.getElementById("paymenttypeinput").value;
   if (ts != undefined){ GLOBALS['banktxn_paymenttype'] = document.getElementById("paymenttypeinput").value; }
   else { GLOBALS['banktxn_paymenttype'] = "";} 
   ts = document.getElementById("vatrateidinput").value;
   if (ts != undefined){ GLOBALS['banktxn_vatrateid'] = document.getElementById("vatrateidinput").value;}
   else { GLOBALS['banktxn_vatrateid'] = "";}
   GLOBALS['banktxn_vat'] = calculateVAT(GLOBALS['banktxn_debit'],GLOBALS['banktxn_credit'],GLOBALS['banktxn_vatrateid'],GLOBALS['banktxn_date']); 
   ts = document.getElementById("fincategoryidinput").value;
   if (ts != undefined){ GLOBALS['banktxn_fincategoryid'] = document.getElementById("fincategoryidinput").value;}
   else { GLOBALS['banktxn_fincategoryid'] = "";}
   ts = document.getElementById("customeridinput").value;
   if (ts != undefined){ GLOBALS['banktxn_customerid'] = document.getElementById("customeridinput").value;}
   else { GLOBALS['banktxn_customerid'] = "";}
   ts = document.getElementById("jobidinput").value;
   if (ts != undefined){ GLOBALS['banktxn_jobid'] = document.getElementById("jobidinput").value;}
   else { GLOBALS['banktxn_jobid'] = "";}
   // YAHOO.log("Pre Write - "+GLOBALS['banktxn_processstatus']+"/"+GLOBALS['banktxn_purpose']+"/"+GLOBALS['banktxn_txnfavouriteid']+"/"+GLOBALS['banktxn_supplierid']+"/"+GLOBALS['banktxn_customerid'],"info");
   // alert("Pre Write - "+GLOBALS['banktxn_processstatus']+"/"+GLOBALS['banktxn_purpose']+"/"+GLOBALS['banktxn_txnfavouriteid']+"/"+GLOBALS['banktxn_supplierid']+"/"+GLOBALS['banktxn_customerid']);   
   Write_Data_Hash("banktxn",banktxn_id);
   banktxntablerow = getBanktxnTableArrayRow(banktxn_id);
   var col = banktxnTableObject.getColumn('banktxn_allocationbutton');      
   banktxnTableObject.updateCell(banktxntablerow, col, "Review");
   col = banktxnTableObject.getColumn('banktxn_allocationstatus'); 
   banktxnTableObject.updateCell(banktxntablerow, col, "allocated to "+GLOBALS['banktxn_txnfavouriteid']);    
   var col = banktxnTableObject.getColumn('banktxn_metoo');    
   banktxnTableObject.updateCell(banktxntablerow, col, false); 
   banktxnTableObject.selectRow(banktxnTableObject.getTrEl(banktxntablerow));   
  }
 } 
}

//========== Update Favourites  ==========================================================
	
function txnFavouriteUpdate() {
 YAHOO.log("txnFavouriteUpdate -" + GLOBALS['banktxn_purpose'] + " " + GLOBALS['banktxn_txnfavouriteid'],"info");
 Get_Data_Hash("txntemplate",GLOBALS['banktxn_purpose']);
 GLOBALS['txnfavourite_id'] = GLOBALS['banktxn_txnfavouriteid']; 
 GLOBALS['txnfavourite_purpose'] = GLOBALS['banktxn_purpose'];
 if (GLOBALS['txntemplate_supplierid'] == "NA") {GLOBALS['txnfavourite_supplierid'] = "";}
 else {GLOBALS['txnfavourite_supplierid'] = document.getElementById("supplieridinput").value;} 
 if (GLOBALS['txntemplate_paymenttype'] == "NA") {GLOBALS['txnfavourite_paymenttype'] = "";}
 else {GLOBALS['txnfavourite_paymenttype'] = document.getElementById("paymenttypeinput").value;} 
 if (GLOBALS['txntemplate_vatrateid'] == "NA") {GLOBALS['txnfavourite_vatrateid'] = "";}
 else {GLOBALS['txnfavourite_vatrateid'] = document.getElementById("vatrateidinput").value;} 
 if (GLOBALS['txntemplate_fincategoryid'] == "NA") {GLOBALS['txnfavourite_fincategoryid'] = "";}
 else {GLOBALS['txnfavourite_fincategoryid'] = document.getElementById("fincategoryidinput").value;} 
 if (GLOBALS['txntemplate_customerid'] == "NA") {GLOBALS['txnfavourite_customerid'] = "";}
 else {GLOBALS['txnfavourite_customerid'] = document.getElementById("customeridinput").value;} 
 if (GLOBALS['txntemplate_comment'] == "NA") {GLOBALS['txnfavourite_comment'] = "";}
 else {GLOBALS['txnfavourite_comment'] = document.getElementById("commentinput").value;} 
 if (GLOBALS['txntemplate_jobid'] == "NA") {GLOBALS['txnfavourite_jobid'] = "";}
 else {GLOBALS['txnfavourite_jobid'] = document.getElementById("jobidinput").value;} 
 Write_Data_Hash('txnfavourite',GLOBALS['txnfavourite_id']);
 tbits = GLOBALS['banktxn_txnfavouriteid'].split("_");  tfavouritename = tbits[1];     
 if (favouriteaddedupdated == "Add") { var acceptance = 'New favourite "'+tfavouritename+'" created.'; }	   	  
 else { var acceptance = 'Existing favourite "'+tfavouritename+'" changed.'; }	   
 alert(acceptance);
}

//========== New Data Routines  ==========================================================

function newFavouriteOutput() {
 document.getElementById("nffavouritepurposetext").innerHTML = "Transaction type: "+document.getElementById("purposetext").innerHTML;	 
 document.getElementById("nffavouritenameinput").value = "";
 newFavouriteDialogObject.show(); 
}
function newSupplierOutput() {
 document.getElementById("nssupplieridinput").value = "";
 document.getElementById("nssuppliernameinput").value = ""; 
 newSupplierDialogObject.show();  
}
function newCustomerOutput() {
 document.getElementById("nccustomeridinput").value = "";
 document.getElementById("nccustomernameinput").value = ""	
 newCustomerDialogObject.show();  
}
function newJobOutput() {
 document.getElementById("njjobidinput").value = "";
 document.getElementById("njjobnameinput").value = ""	
 newJobDialogObject.show(); 
}
function newFavouriteAction() {
 document.getElementById("favouritenametext").innerHTML = document.getElementById("nffavouritenameinput").value;
 newFavouriteDialogObject.hide();
}
function newSupplierAction() {
 Initialise_Data('supplier');
 newsupplier_id = document.getElementById("nssupplieridinput").value;
 GLOBALS['supplier_id'] = newsupplier_id;
 GLOBALS['supplier_name'] = document.getElementById("nssuppliernameinput").value;
 Write_Data_Hash("supplier",newsupplier_id);   
 newSupplierDialogObject.hide();
 temphash = Get_SelectArrays_Hash("supplier","supplier_id","supplier_name"); temphash[""] = ""; 
 JSINSELECTHASH(temphash,
		  document.allocateresultform.supplieridinput,newsupplier_id,"Yes","",""); 
}
function newCustomerAction() {
 Initialise_Data('customer');
 newcustomer_id = document.getElementById("nccustomeridinput").value;
 GLOBALS['customer_id'] = newcustomer_id;
 GLOBALS['customer_name'] = document.getElementById("nccustomernameinput").value;
 Write_Data_Hash("customer",newcustomer_id);   
 newCustomerDialogObject.hide();
 temphash = Get_SelectArrays_Hash("customer","customer_id","customer_name"); temphash[""] = ""; 
 JSINSELECTHASH(temphash,
		 document.allocateresultform.customeridinput,newcustomer_id,"Yes","",""); 
}
function newJobAction() {
 Initialise_Data('job');
 newjob_id = document.getElementById("njjobidinput").value;
 GLOBALS['job_id'] = newjob_id;
 GLOBALS['job_name'] = document.getElementById("njjobnameinput").value;
 Write_Data_Hash("job",newjob_id);   
 newJobDialogObject.hide();
 temphash = Get_SelectArrays_Hash("job","job_id","job_name"); temphash[""] = ""; 
 JSINSELECTHASH(temphash,
			  document.allocateresultform.jobidinput,newjob_id,"Yes","",""); 
}

//========== Wizard Routines  ==========================================================

function callWizard(wizaction) {
 // alert("callWizard - "+wizaction);
 var handleWizardSuccess = function(o){
  // YAHOO.log("The WizardSuccess handler was called; this transaction did not abort.  tId: " + o.tId + ".", "info");
  if(o.responseText != undefined){
   // alert(o.responseText);
   stopWait();
   createWizardResponseTableArray(o.responseText);
   if (wizardresponsetablestatus == "initialload") {populateWizardResponseTable();} else {repopulateWizardResponseTable();}
   wizardDialog.show();		  	  
  }
 }
 var handleWizardFailure = function(o){
	  stopWait();		 
	  YAHOO.log("The DataRequestFailure handler was called; this transaction aborted.  tId: " + o.tId + ".", "info", "example");
	  response = "";  
	  response += "<li>Transaction id: " + o.tId + "</li>";
	  response += "<li>HTTP status: " + o.status + "</li>";
	  response += "<li>Status code message: " + o.statusText + "</li>";
	  updatelog = response+"<br>"+updatelog;
	  document.getElementById("updateLog").innerHTML = updatelog;		
 }
 var wizardCallback = {
	  success: handleWizardSuccess,
	  failure: handleWizardFailure,
	  timeout: 50000
 }; 
		 
 dataparms = "&WizAction="+wizaction;
 var sUrl = JSSitePHPURL()+"/"+JSCodeVersion()+"_finallocatewizard.php"+STDPARMS()+dataparms;
 // alert(sUrl);
 // YAHOO.log("makeDataRequest - "+sUrl,"info");
 startWait("Wizard"); 
 YAHOO.util.Connect.asyncRequest('GET', sUrl, wizardCallback);
}

function createWizardResponseTableArray(responsetext) {
 // YAHOO.log("createWizardResponseTable called: "+responsetext,"info");
 // alert("createWizardResponseTable called ")+responsetext;
 document.getElementById("wizardopeningtext").innerHTML = "";
 document.getElementById("wizardclosingtext").innerHTML = "";
 wizardresponsearray = Array ( ); wizardresponsetablearray = Array ( );	 
 var responserecords = responsetext.split("^");
 var newindex = 0;
 for (var responserecordsindex in responserecords) {
  var responsesplit = responserecords[responserecordsindex].split("|"); 
  if (responsesplit[0] == "openingtext")	{document.getElementById("wizardopeningtext").innerHTML = responsesplit[1];}
  if (responsesplit[0] == "closingtext")	{document.getElementById("wizardclosingtext").innerHTML = responsesplit[1];}	
  if (responsesplit[0] == "data")	{
   wizardresponsearray[newindex] = responserecords[responserecordsindex];  	 
   wizardresponsetablearray[newindex] = Array ( responsesplit[1],
    responsesplit[2],responsesplit[3],responsesplit[4],responsesplit[5],responsesplit[6],responsesplit[7] );
   newindex++;
  }
 }
}

function populateWizardResponseTable() {
 // YAHOO.log("populateWizardResponseTable called "+wizardresponsetablestatus,"info");
 // alert("populateWizardResponseTable called "+wizardresponsetablestatus);
 var wizardresponseColumnDefs = [
	    {key:"wizardresponse_id",label:"Id",width:70,resizeable:true,sortable:true},
	    {key:"wizardresponse_date",label:"Date",width:70,resizeable:true,sortable:true},
	    {key:"wizardresponse_type",label:"Type",width:20,resizeable:true,sortable:true},
	    {key:"wizardresponse_description",label:"Description",width:250,resizeable:true,sortable:true},
	    {key:"wizardresponse_debit",label:"Debit",width:50,resizeable:true,sortable:true},
	    {key:"wizardresponse_credit",label:"Credit",width:50,resizeable:true,sortable:true},
	    {key:"wizardresponse_action",label:"Action",width:250,resizeable:true,sortable:true}	    
 ];
 
 var wizardresponseSource = new YAHOO.util.DataSource(wizardresponsetablearray);
 wizardresponseSource.responseType = YAHOO.util.XHRDataSource.TYPE_JSARRAY;
 wizardresponseSource.responseSchema = {
      fields: ["wizardresponse_id","wizardresponse_date","wizardresponse_type","wizardresponse_description","wizardresponse_debit",
	             "wizardresponse_credit","wizardresponse_action"]
 };
   
 var wizardresponseConfigs = {
      sortedBy:{key:"wizardresponse_id",dir:"asc"},
	    paginator: new YAHOO.widget.Paginator({
	      rowsPerPage: 25,
	      template: YAHOO.widget.Paginator.TEMPLATE_ROWS_PER_PAGE,
	      rowsPerPageOptions: [10,25,50,100],
	      pageLinks: 5
	    }),
	    draggableColumns:true
 }
 wizardresponseTableObject = new YAHOO.widget.DataTable("wizardresponsetable", wizardresponseColumnDefs, wizardresponseSource, wizardresponseConfigs);       
 wizardresponsetablestatus = "reload";	
 return {
	    wDS: wizardresponseSource,
	    wDT: wizardresponseTableObject
 };
}
 
function repopulateWizardResponseTable() {
 // YAHOO.log repopulateWizardResponseTable called "+wizardresponsetablestatus);
 deletemax = wizardresponsetablearray.length;
 // alert("DELETEWIZARDMAX "+deletemax);
 for (di=0; di < deletemax; di++) {		 
  wizardresponseTableObject.deleteRow(0);
 }
 // {row:globalDataCount, one:"one", two:"two", three:"three"}
 for (wizardresponseindex in wizardresponsearray) {
  var responsesplit = wizardresponsearray[wizardresponseindex].split("|");   
  datastring =  "var data = {"; 
  datastring =  datastring+'wizardresponse_id:"'+responsesplit[1]+'", ';	  
  datastring =  datastring+'wizardresponse_date:"'+responsesplit[2]+'", ';	  	  
  datastring =  datastring+'wizardresponse_type:"'+responsesplit[3]+'", ';	  	  
  datastring =  datastring+'wizardresponse_description:"'+responsesplit[4]+'", ';	  
  datastring =  datastring+'wizardresponse_debit:"'+responsesplit[5]+'", ';
  datastring =  datastring+'wizardresponse_credit:"'+responsesplit[6]+'", ';	   
  datastring =  datastring+'wizardresponse_action:"'+responsesplit[7]+'"}';  
  eval(datastring);
  var newrecord = YAHOO.widget.DataTable._cloneObject(data);   
  //  newrecord.genericPrimeKeyFieldName = activeGenericId;
  wizardresponseTableObject.addRow(newrecord);
  // wizardresponseDialogObject.render();
 }
}

//========== Utility Routines  ==========================================================

function getBanktxnTableArrayRow(tbanktxn_id) {
 var rowindex = 0;
 aRecs = banktxnTableObject.getRecordSet().getRecords();
 aCols = banktxnTableObject.getColumnSet().keys;
 for (i=0; i<aRecs.length; i++) {
  oData = aRecs[i].getData();
  if (tbanktxn_id == oData[aCols[0].key]) { rowindex = i; }
 }
 var record = banktxnTableObject.getRecord(rowindex);
 return record;	
}

function calculateVAT(debitstr,creditstr,vatrateidstr,datestr) {
 var grossnum = parseFloat(debitstr)+ parseFloat(creditstr);
 Get_Data_Hash_DateEffective('vatrate',vatrateidstr,datestr);	
 var vatratenum = parseFloat(GLOBALS['vatrate_rate']);
 vatnum =grossnum - (grossnum /(1+(vatratenum/100)));
 var vatnumrounded = vatnum.toFixed(2);
 // alert(debitstr+"|"+creditstr+"|"+vatrateidstr+"|"+datestr+"|"+vatratenum.toString()+"|"+vatnumrounded.toString());
 return vatnumrounded.toString();
}

function vatRateChanged() {
 var newvatrateid = document.getElementById("vatrateidinput").value;
 document.getElementById("vatinput").value = calculateVAT(GLOBALS['banktxn_debit'],GLOBALS['banktxn_credit'],newvatrateid,GLOBALS['banktxn_date']);
 document.getElementById("vatratepercenttext").innerHTML = "@"+GLOBALS['vatrate_rate']+"%";    
}

function Get_FinCategorySelectArrays_Hash (purpose) {
 var thash = new Array();
 var tarray = Get_Array_Hash('fincategory');
 for (var tarrayindex in tarray) {
  var tkey = tarray[tarrayindex];
  Get_Data_Hash('fincategory',tkey);
  $usethis = "0";
  if (GLOBALS["IOERROR"] == "0"){
   if ((GLOBALS['fincategory_usedefaulted'] == "Yes")||(GLOBALS['fincategory_useselected'] == "Yes")) { $usethis = "1"; }	 
   if (GLOBALS['fincategory_id'].substr(0,1) != "F") { $usethis = "0"; }
   if (purpose != GLOBALS['fincategory_purpose']) { $usethis = "0"; }	    
   if ($usethis == "1") {
	$prefix = "";	   
    if (GLOBALS['fincategory_subheader'] == "Yes") { $prefix = "--------- "; }  	   
    thash[GLOBALS['fincategory_id']] = $prefix+GLOBALS['fincategory_description']; 	  
    // YAHOO.log(GLOBALS[tkeyfield]+"==>"+GLOBALS[ttextfield],"info");
   }
  }
  else {YAHOO.log("Get_FinCategorySelectArrays_Hash ERROR - "+tkey,"info");}
 }
 return thash;
}

function Match (source, target) { 
 // input: strings to comnpare - output: true or false depending on allocation comparison rules
 var sourcea = source.replace(/ /g,"");
 var sourceb = sourcea.replace(/\./g,"");
 var sourcestr = sourceb;
 var sourcelen = sourcestr.length; 
 var targeta = target.replace(/ /g,"");	
 var targetb = targeta.replace(/\./g,"");
 var targetstr = targetb;
 var targetlen = targetstr.length;
 var maxlen = sourcelen;
 if (targetlen > sourcelen) { maxlen = targetlen; } 
 var sourcechar = "";  var targetchar = "";
 var matchedchars = 0; var unmatchedchars = 0;
 var matchmin = 10;
 if (GLOBALS['company_matchminallocate'] != "") {matchmin = parseFloat(GLOBALS['company_matchminallocate']);}
 var nomatchmax = 4;
 if (GLOBALS['company_nomatchmaxallocate'] != "") {nomatchmax = parseFloat(GLOBALS['company_nomatchmaxallocate']);} 
 for (var ci=0; ci<maxlen; ci++) { 
  if (ci > sourcelen) { sourcechar = "!";} else { sourcechar = sourcestr.substring(ci,1); } 
  if (ci > targetlen) { targetchar = "!";} else { targetchar = targetstr.substring(ci,1); } 
  if (sourcechar == targetchar) {matchedchars++;} else {unmatchedchars++;}  
 }
 var result = false;
 if ((matchedchars >= matchmin)||(unmatchedchars == 0)) {result = true;} 
 if (unmatchedchars > nomatchmax) {result = false;} 
 return result;
}	

function createFilterArrays () {
 var ichar = "";
 var section = "0";
 filtertype[0] = "";
 filterparm0[0] = ""; 
 filterparm1[0] = ""; 
 filterparm2[0] = ""; 
 var filterindex = 0;
 var parmindex = 0;
 // alert(GLOBALS['company_filteroutallocatelist']); 
 for (var ci=0; ci<GLOBALS['company_filteroutallocatelist'].length; ci++) { 	
  ichar = GLOBALS['company_filteroutallocatelist'].substring(ci,ci+1);
  if  ((ichar != "[")&&(ichar != "]")) { 
   if (section == "0") { 
    // prior to first parameter = Filter Type
    filtertype[filterindex] = filtertype[filterindex] + ichar;
    filtermaxindex = filterindex;
   }
   if (section == "1") { 
    // parameter text	   
    if (parmindex == 0) { filterparm0[filterindex] = filterparm0[filterindex] + ichar;  }	   
    if (parmindex == 1) { filterparm1[filterindex] = filterparm1[filterindex] + ichar;  }	
    if (parmindex == 2) { filterparm2[filterindex] = filterparm2[filterindex] + ichar;  }	    
   }		
   if (section == "2") { 
    // look for commas - which denote a new filter
    if (ichar == ",") {
     section = "0";         	
     filterindex++;
     filtertype[filterindex] = "";
     filterparm0[filterindex] = ""; 
     filterparm1[filterindex] = ""; 
     filterparm2[filterindex] = ""; 
     parmindex = 0;    	
    }
   }
  }
  if  (ichar == "[") { section = "1"; }
  if  (ichar == "]") { section = "2"; parmindex++; }	    
 }
 // var alertstr = "";
 // for (var fi=0; fi<=filtermaxindex; fi++) { 
 // alertstr = alertstr+filtertype[fi]+"*"+filterparm0[fi]+"*"+filterparm1[fi]+"*"+filterparm2[fi]+"^\n "; 
 // }  
 // alert(alertstr);   
}

function Filter (indescription,bankuploadid) {
 var outdescription = indescription;
 for (var fi=0; fi<=filtermaxindex; fi++) {
  var tdescription = "";
  if (filtertype[fi] == "HIDESECTION" ) {
   if ( filterparm0[fi] == bankuploadid ) {
    if (outdescription.indexOf(",") != -1) {
	 var fbitsa = outdescription.split(filterparm1[fi]);
     var fsep = "";
     var hideindex = parseInt(filterparm2[fi])-1;
     for (var fbitsai in fbitsa) {     
      if (fbitsai != hideindex) {
       tdescription = tdescription + fsep + fbitsa[fbitsai];
       fsep = filterparm1[fi];
      }
     }
     outdescription = tdescription;
    }
   }	  
  }
  if (filtertype[fi] == "HIDETEXT" ) {
   if ( filterparm0[fi] == bankuploadid ) { 
	tdescription = outdescription.replace(filterparm1[fi],filterparm2[fi]);
    outdescription = tdescription;		
   }
  } 
 } 
 return outdescription;	
}

YAHOO.util.Event.addListener(window, "load", initPage);